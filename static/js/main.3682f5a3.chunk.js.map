{"version":3,"sources":["destroyTest/component/data.ts","destroyTest/component/layout.tsx","redux/action/types.ts","destroyTest/TestResult.tsx","destroyTest/component/TestProgress.tsx","destroyTest/TestView.tsx","destroyTest/DestroyMain.tsx","App.tsx","reportWebVitals.ts","redux/reducer/destroyReducer.ts","redux/reducer/index.ts","index.tsx"],"names":["resultData","imgSrc","type","data","testDataList","questionTxt","answerTxtList","answerTxt","result","TestLayout","styled","section","props","next","css","isClicked","MOVE_TEST_PAGE","RESULT_TXT_ADD","INIT_TEST","Whole","TestResultImg","img","TestResultTxtHead","h3","TestResultTxtbody","p","RetryBtn","button","TestResult","useSelector","state","destroy","history","useHistory","dispatch","useDispatch","t","forEach","value","max","k","nType","parseInt","src","dangerouslySetInnerHTML","__html","onClick","push","ProgressBarList","article","ProgressBar","div","isCheck","ProgressImg","TestProgress","page","console","log","map","index","TestImage","TestQuestion","SelectBtn","TestView","useState","setIsClicked","len","length","onNextHandler","setTimeout","payload","Title1","h1","Title2","h2","StartBtn","DestroyMain","to","App","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initDestroyData","rootReducer","combineReducers","action","store","createStore","Reducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qNAAaA,EAAa,CACtB,CACIC,OAAO,qBACPC,KAAM,qBACNC,KAAK,+RAKT,CACIF,OAAO,qBACPC,KAAM,qBACNC,KAAK,gnBAOT,CACIF,OAAO,qBACPC,KAAM,qBACNC,KAAK,isBAOT,CACIF,OAAO,qBACPC,KAAM,qBACNC,KAAK,4iBAQAC,EAAe,CAExB,CACIH,OAAO,qBACPI,YAAY,2KACZC,cAAc,CACV,CACIC,UAAU,qCACVC,OAAO,KAEX,CACID,UAAU,wBACVC,OAAO,KAEX,CACID,UAAU,kEACVC,OAAO,KAEX,CACID,UAAU,mEACVC,OAAO,OAKnB,CACIP,OAAO,qBACPI,YAAY,oPACZC,cAAc,CACV,CACIC,UAAU,4GACVC,OAAO,KAEX,CACID,UAAU,6HACVC,OAAO,KAEX,CACID,UAAU,iGACVC,OAAO,KAEX,CACID,UAAU,qFACVC,OAAO,OAKnB,CACIP,OAAO,qBACPI,YAAY,kNACZC,cAAc,CACV,CACIC,UAAU,4EACVC,OAAO,KAEX,CACID,UAAU,oGACVC,OAAO,KAEX,CACID,UAAU,6HACVC,OAAO,KAEX,CACID,UAAU,+HACVC,OAAO,OAKnB,CACIP,OAAO,qBACPI,YAAY,gHACZC,cAAc,CACV,CACIC,UAAU,iHACVC,OAAO,KAEX,CACID,UAAU,mIACVC,OAAO,KAEX,CACID,UAAU,+HACVC,OAAO,KAEX,CACID,UAAU,sFACVC,OAAO,OAKnB,CACIP,OAAO,qBACPI,YAAY,gGAEZC,cAAc,CACV,CACIC,UAAU,2CACVC,OAAO,KAEX,CACID,UAAU,oDACVC,OAAO,KAEX,CACID,UAAU,mFACVC,OAAO,KAEX,CACID,UAAU,uBACVC,OAAO,OAKnB,CACIP,OAAO,qBACPI,YAAY,0JACZC,cAAc,CACV,CACIC,UAAU,4KACVC,OAAO,KAEX,CACID,UAAU,8FACVC,OAAO,KAEX,CACID,UAAU,6EACVC,OAAO,KAEX,CACID,UAAU,wFACVC,OAAO,OAKnB,CACIP,OAAO,qBACPI,YAAY,8XACZC,cAAc,CACV,CACIC,UAAU,8CACVC,OAAO,KAEX,CACID,UAAU,8CACVC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","file":"static/js/main.3682f5a3.chunk.js","sourcesContent":["export const resultData = [\r\n    {\r\n        imgSrc:\"img/destory/11.png\",\r\n        type: \"외향형\",\r\n        data: `- 외부 활동에 적극적이다.<br/>\r\n        - 다른 사람들과 잘 어울림<br/>\r\n        - 친구들을 만나는 것을 좋아함<br/>\r\n        - 열정적임<br/>`,\r\n    },\r\n    {\r\n        imgSrc:\"img/destory/12.png\",\r\n        type: \"내향형\",\r\n        data: `- 혼자서 하는 활동을 집중적으로 한다.<br/>\r\n        - 나는 내생각을 말로 전달하는 것보다 글로 적을 때 잘 표현한다.\r\n        <br/>\r\n        - 나만의 공간에서 혼자 있을 때, 에너지가 충전된다.<br/>\r\n        - 깊이 있는 친구를 사귀는 것을 좋아한다.<br/>\r\n        - 조용하고 신중하다.<br/>`,\r\n    },\r\n    {\r\n        imgSrc:\"img/destory/13.png\",\r\n        type: \"감정형\",\r\n        data: `- 나는 내 느낌이나 감정 감정에 대한 이야기를 많이 해요.<br/>\r\n        - 나는 가슴으로 느껴지는 것이 중요해요.\r\n        <br/>\r\n        - 나는 평소에 다른 사람의 마음에 잘 공감해주는 편이에요.<br/>\r\n        - 좋아하는 친구가 잘못을 하면 감싸준다.<br/>\r\n        - 사고형의 친구를 보면 냉정한 것 같다고 생각한다.<br/>`,\r\n    },\r\n    {\r\n        imgSrc:\"img/destory/14.png\",\r\n        type: \"사고형\",\r\n        data: `- 객관적인 판단이나 생각에 대한 이야기를 많이 한다.<br/>\r\n        - 머리로 이해되는 것이 중요하다.<br/>\r\n        - 옳고 그름이 중요해서 친구가 잘못하면 지적한다.<br/>\r\n        - 감정적인 친구를 보면 비합리적인 것 같다는 생각이 들어요.<br/>`\r\n    }\r\n\r\n];\r\n\r\nexport const testDataList = [\r\n    // #1\r\n    {\r\n        imgSrc:\"img/destory/01.png\",\r\n        questionTxt:\"멸망한 세계 속에서 기억과 정신을 잃은 나... 눈을 뜨고 내뱉은 말(...)\",\r\n        answerTxtList:[\r\n            {\r\n                answerTxt:\"여긴 어디지...\",\r\n                result:\"0\",\r\n            },\r\n            {\r\n                answerTxt:\"배고파...\",\r\n                result:\"1\",\r\n            },\r\n            {\r\n                answerTxt:\"다른 사람들은 어디있지?\",\r\n                result:\"2\",\r\n            },\r\n            {\r\n                answerTxt:\"다친 곳이 없어 다행이군.\",\r\n                result:\"3\",\r\n            },\r\n        ]},\r\n\r\n    // #2\r\n    {\r\n        imgSrc:\"img/destory/02.png\",\r\n        questionTxt:'대부분 건물 들은 부서져 있었고 시체들만 있는 거리를 걷고 있는 중, 어디로 향할지 정하는데(...)',\r\n        answerTxtList:[\r\n            {\r\n                answerTxt:\"에잇! 피곤한데, 한 숨 더 자보고 생각하자.\",\r\n                result:\"0\",\r\n            },\r\n            {\r\n                answerTxt:\"생존한 사람들이 있을 수도 있어. 사람부터 찾자.\",\r\n                result:\"1\",\r\n            },\r\n            {\r\n                answerTxt:\"주변에 식량과 식수를 찾아봐야겠어.\",\r\n                result:\"2\",\r\n            },\r\n            {\r\n                answerTxt:\"일단 계획부터 세우고 가야겠어.\",\r\n                result:\"3\",\r\n            },\r\n        ]},\r\n\r\n    // #3\r\n    {\r\n        imgSrc:\"img/destory/03.png\",\r\n        questionTxt:\"도시 안에 대부분 먹을 것이 없다. 그러던 중, 쥐 한마리를 잡게 되는데٩(๑`^´๑)۶\",\r\n        answerTxtList:[\r\n            {\r\n                answerTxt:\"이게 웬 횡재! 일단 먹고 보자.\",\r\n                result:\"0\",\r\n            },\r\n            {\r\n                answerTxt:\"으앙, 미키마우스 불쌍해 ㅜ. 놓아주자.\",\r\n                result:\"1\",\r\n            },\r\n            {\r\n                answerTxt:\"무언가에 감염된 쥐일 수도 있어. 불에 끓여먹자.\",\r\n                result:\"2\",\r\n            },\r\n            {\r\n                answerTxt:\"INPUT : 쥐가 생존해 있다. => OUTPUT : 주변에 먹을 것이 있다!\",\r\n                result:\"3\",\r\n            },\r\n        ]},\r\n\r\n    // #4\r\n    {\r\n        imgSrc:\"img/destory/04.png\",\r\n        questionTxt:\"밤이 되었다. 잠을 잘 곳을 선택하는 당신(-..-)\",\r\n        answerTxtList:[\r\n            {\r\n                answerTxt:\"그냥. 귀찮으니 대충 불 피우고 여기서 자자.\",\r\n                result:\"0\",\r\n            },\r\n            {\r\n                answerTxt:\"추우니깐 건물 안으로 들어가자.(일부 부서진 건물)\",\r\n                result:\"1\",\r\n            },\r\n            {\r\n                answerTxt:\"아니야, 건물은 위험할 수도 있어! 차 밑에서 자자.\",\r\n                result:\"2\",\r\n            },\r\n            {\r\n                answerTxt:\"더럽지만, 쓰레기통 안에서 자자.\",\r\n                result:\"3\",\r\n            },\r\n        ]},\r\n\r\n    // #5\r\n    {\r\n        imgSrc:\"img/destory/05.png\",\r\n        questionTxt:\"꿈 속에서 누군가를 만났다. 누구지...?\",\r\n        // 꿈 속에서 미래의 한 장면을 보았다. ?\r\n        answerTxtList:[\r\n            {\r\n                answerTxt:\"오! 마이 프렌드~\",\r\n                result:\"0\",\r\n            },\r\n            {\r\n                answerTxt:\"어무이 ㅜ~~~~~~~~~~~~~~~~~~ㅜ\",\r\n                result:\"1\",\r\n            },\r\n            {\r\n                answerTxt:\"뭐야. 내 자신이 내 앞에 있잖아.?\",\r\n                result:\"2\",\r\n            },\r\n            {\r\n                answerTxt:\"이런 뿡~\",\r\n                result:\"3\",\r\n            },\r\n        ]},\r\n\r\n    // #6\r\n    {\r\n        imgSrc:\"img/destory/06.png\",\r\n        questionTxt:\"다음 날, 길을 걷다가 생존자를 보았다.꒰⸝⸝•｡•⸝⸝꒱\",\r\n        answerTxtList:[\r\n            {\r\n                answerTxt:\"(달려가면서 큰 소리로) 저기요~! 안녕하세요! \\n제 이름은... (재잘재잘)\",\r\n                result:\"0\",\r\n            },\r\n            {\r\n                answerTxt:\"(일단 몸을 숨겨서 상대를 관찰한다.)\",\r\n                result:\"1\",\r\n            },\r\n            {\r\n                answerTxt:\"(칼을 겨누며) 가진 것 다 내놔!\",\r\n                result:\"2\",\r\n            },\r\n            {\r\n                answerTxt:\"(그 사람한테서 도망간다.) 호다닥~\",\r\n                result:\"3\",\r\n            },\r\n        ]},\r\n\r\n    // #7\r\n    {\r\n        imgSrc:\"img/destory/07.png\",\r\n        questionTxt:\"생존자 캠프에 합류했다. 리더로 보이는 사람이 물었다. '당신은 멸망하기 전에 직업이 무엇이었나요?' (기억 상실이였던 나는 거짓으로 대답을 하였다.)\",\r\n        answerTxtList:[\r\n            {\r\n                answerTxt:\"개발자였습니다.\",\r\n                result:\"0\",\r\n            },\r\n            {\r\n                answerTxt:\"경찰이었습니다.\",\r\n                result:\"1\",\r\n            },\r\n            {\r\n                answerTxt:\"정치가였습니다.\",\r\n                result:\"2\",\r\n            },\r\n            {\r\n                answerTxt:\"선생님이었습니다.\",\r\n                result:\"3\",\r\n            },\r\n        ]},\r\n\r\n    // #8\r\n    {\r\n        imgSrc:\"img/destory/08.png\",\r\n        questionTxt:\"캠프에 합류한 당신, 무엇부터 할 것인가?\",\r\n        answerTxtList:[\r\n            {\r\n                answerTxt:\"캠프 내에 사람들을 만나 세상에 대해 이야기한다.\",\r\n                result:\"0\",\r\n            },\r\n            {\r\n                answerTxt:\"혹시 모르니 리더가 명령하기 전까지 기다린다.\",\r\n                result:\"1\",\r\n            },\r\n            {\r\n                answerTxt:\"캠프 내에 음식, 약품, 무기 저장소 위치부터 알아본다.\",\r\n                result:\"2\",\r\n            },\r\n        ]},\r\n\r\n\r\n    // #9\r\n    {\r\n        imgSrc:\"img/destory/09.png\",\r\n        questionTxt:\"동료와 함께 폐허가 된 건물에서 쓸모있는 물건을 찾는 중, 방사능 괴물을 만났다. \",\r\n        answerTxtList:[\r\n            {\r\n                answerTxt:\"( 일단 도망친다. ) 호더덕~!\",\r\n                result:\"0\",\r\n            },\r\n            {\r\n                answerTxt:\"칼을 겨누며 괴물이 쉽게 오지 못하게 주변에 돌을 던진다.\",\r\n                result:\"1\",\r\n            },\r\n            {\r\n                answerTxt:\"동료가 당하기 전에 먼저 달려든다.\",\r\n                result:\"2\",\r\n            },\r\n            {\r\n                answerTxt:\"동료와 숨어서 작전을 짜며 기회를 노린다.\",\r\n                result:\"3\",\r\n            },\r\n        ]},\r\n\r\n    // #10\r\n    {\r\n        imgSrc:\"img/destory/10.png\",\r\n        questionTxt:\"생존자 캠프 내에 음식이 사라졌다. 알리바이가 없는 당신을 의심하는 사람들...\",\r\n        answerTxtList:[\r\n            {\r\n                answerTxt:\"(말을 잘 못하는 성격이라 도망 친다.) 호다락~!\",\r\n                result:\"0\",\r\n            },\r\n            {\r\n                answerTxt:\"자신은 절대 아니라고 믿어달라고 사람들을 설득한다.\",\r\n                result:\"1\",\r\n            },\r\n        ]},\r\n\r\n\r\n]","import styled, { css } from 'styled-components';\r\n\r\n\r\nexport const TestLayout=styled.section<{next?: number, isClicked?:boolean}>`\r\n    position: relative;\r\n    width: 420px;\r\n    min-height: 600px;\r\n    border: 8px dashed white;\r\n    border-radius: 4px;\r\n    /* border-style:  */\r\n    margin: 0 auto;\r\n    padding: 1.4em;\r\n\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items : center;\r\n    \r\n    /* animation : next 0.3s ease-in-out; */\r\n    transform-origin: left center;\r\n\r\n    ${props=> (props.next === 1) && css`\r\n        top: -600px;\r\n        opacity: 0;\r\n\r\n    `}\r\n\r\n    ${props=> (props.isClicked && props.next === 0) && css`\r\n        transition: all 2s;\r\n        transform: rotateY(-180deg);\r\n        opacity: 0;\r\n    `}\r\n\r\n    ${props=> (props.isClicked && props.next === 1) && css`\r\n        transition: all 2s;\r\n        opacity: 1;\r\n    `}\r\n\r\n`;\r\n","export const MOVE_TEST_PAGE = \"destroy/MOVE_TEST_PAGE\";\r\nexport const RESULT_TXT_ADD = \"destroy/RESULT_TXT_ADD\";\r\nexport const INIT_TEST = \"destroy/INIT_TEST\";\r\n","import { resultData } from 'destroyTest/component/data';\r\nimport { TestLayout } from 'destroyTest/component/layout';\r\nimport React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useHistory } from 'react-router';\r\nimport { INIT_TEST } from 'redux/action/types';\r\nimport styled from 'styled-components';\r\n\r\nconst Whole = styled.section`\r\n    margin-top: 50px;\r\n    /* border: 1px solid; */\r\n`;\r\n\r\nconst TestResultImg = styled.img`\r\n    width: 100%;\r\n    height: 280px;\r\n    margin-bottom: 25px;\r\n\r\n    border-radius: 12px;\r\n`;\r\n\r\nconst TestResultTxtHead = styled.h3`\r\n    margin-bottom: 25px;\r\n`;\r\n\r\nconst TestResultTxtbody = styled.p`\r\n    width: 100%;\r\n    margin-bottom: 25px;\r\n\r\n    line-height: 30px;\r\n    font-size: 0.9rem;\r\n\r\n`;\r\n\r\nconst RetryBtn = styled.button`\r\n    width: 150px;\r\n    height: 44px;\r\n    border: 2px dashed red;\r\n    border-radius: 14px;\r\n    color: red;\r\n\r\n    &:hover{\r\n        border: 2px dashed white;\r\n        color: white;\r\n    }\r\n\r\n`;\r\n\r\n\r\nfunction TestResult(){\r\n\r\n    const result = useSelector((state:any)=>state.destroy.result);\r\n    const history = useHistory();\r\n    const dispatch = useDispatch();\r\n    let t:any = {};\r\n\r\n    // 결과 타입 정하기\r\n    result.forEach((value:any)=>{\r\n        t[value] = (t[value] || 0) + 1;\r\n    });\r\n    let max = 0;\r\n    let type = \"\";\r\n    for(const k in t){\r\n        if(max < t[k]){\r\n            type = k;\r\n            max = t[k];\r\n        }\r\n    }\r\n\r\n    let nType = parseInt(type);\r\n\r\n    const onRetryHandler = () => {\r\n        dispatch({type:INIT_TEST});\r\n        history.push(\"/\");\r\n    }\r\n    \r\n    return (\r\n        <Whole>\r\n            <TestLayout>\r\n                <TestResultImg src={resultData[nType].imgSrc} />\r\n                <TestResultTxtHead>{resultData[nType].type}</TestResultTxtHead>\r\n                <TestResultTxtbody dangerouslySetInnerHTML={{__html:resultData[nType].data}}></TestResultTxtbody>\r\n                <RetryBtn onClick={onRetryHandler} >Retry</RetryBtn>\r\n            </TestLayout>\r\n        </Whole>\r\n    );\r\n}\r\nexport default TestResult;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport {testDataList} from './data';\r\n\r\nconst ProgressBarList = styled.article`\r\n    display: flex;\r\n    margin: 20px auto;\r\n`;\r\n\r\nconst ProgressBar = styled.div<{isCheck:boolean}>`\r\n    width: 30px;\r\n    height: 36px;\r\n    margin: 0 6.5px;\r\n\r\n\r\n    border-bottom: 7px solid ${(props)=> props.isCheck ? \"#DB4B4B\" : \"white\"};\r\n    \r\n\r\n`;\r\n\r\nconst ProgressImg = styled.img`\r\n    width: 30px;\r\n    height: 30px;\r\n`;\r\n\r\nfunction TestProgress({page}:{page:number}){\r\n    console.log(page);\r\n    return (\r\n    <ProgressBarList>\r\n    {testDataList.map((value:any, index:number)=>\r\n        <ProgressBar isCheck={page > index} key={index}>{page - 1 === index && <ProgressImg src={'img/ProgressImg.PNG'}/>}</ProgressBar>\r\n    )}\r\n    </ProgressBarList>);\r\n}\r\nexport default TestProgress;","import { testDataList } from 'destroyTest/component/data';\r\nimport { TestLayout } from 'destroyTest/component/layout';\r\nimport TestProgress from 'destroyTest/component/TestProgress';\r\nimport React, { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useHistory } from 'react-router';\r\nimport { MOVE_TEST_PAGE, RESULT_TXT_ADD } from 'redux/action/types';\r\nimport styled, { css } from 'styled-components';\r\n\r\nimport test from './img/skill2.png';\r\n\r\n\r\nconst Whole = styled.section`\r\n    /* position: relative; */\r\n    display: flex;\r\n    flex-direction: column;\r\n\r\n`;\r\n\r\n\r\nconst TestImage = styled.img`\r\n    width: 80px;\r\n    height: 80px;\r\n    /* border: 1px solid #3b2424; */\r\n    margin-bottom: 32px;\r\n`;\r\n\r\nconst TestQuestion = styled.h3`\r\n    width: 350px;\r\n    /* border: 1px solid white; */\r\n    margin-bottom: 32px;\r\n    \r\n\r\n    text-align: center;\r\n    line-height: 34px;\r\n`;\r\n\r\nconst SelectBtn = styled.button`\r\n    width: 320px;\r\n    height: 54px;\r\n    border: 2px solid #DB4B4B;\r\n    margin-bottom: 16px;\r\n\r\n    color: #DB4B4B;\r\n    line-height: 20px;\r\n\r\n    &:hover{\r\n        border: 4px solid white;\r\n        color: white;\r\n    }\r\n`;\r\n\r\n\r\n\r\nfunction TestView(){\r\n    const page = useSelector((state:any) => state.destroy.page);\r\n    const [isClicked, setIsClicked] = useState(false);\r\n    const history = useHistory();\r\n\r\n    const dispatch = useDispatch();\r\n    const len = testDataList.length;\r\n    const onNextHandler = (result:string) => {\r\n        if(isClicked) return;           // 페이지 변화 전 클릭 금지\r\n\r\n        if(page < len){\r\n            // 모든 테스트가 끝나지 않았을 경우,\r\n            setIsClicked(true);\r\n            setTimeout(()=>{\r\n                dispatch({type:MOVE_TEST_PAGE});\r\n                dispatch({type:RESULT_TXT_ADD, payload:result});\r\n                setIsClicked(false);\r\n            }, 1500);\r\n            \r\n        }else{\r\n            history.push(\"/result\");\r\n        }\r\n    }\r\n\r\n    return (\r\n    <Whole>\r\n        <TestProgress page={page}/>\r\n        <TestLayout next={0} isClicked={isClicked}>\r\n            <TestImage src={testDataList[page-1].imgSrc}/>\r\n            <TestQuestion>{testDataList[page-1].questionTxt} </TestQuestion>\r\n            {testDataList[page-1].answerTxtList.map((value, index)=>\r\n                <SelectBtn onClick={()=>onNextHandler(value.result)} key={index}>{value.answerTxt}</SelectBtn>\r\n            )}\r\n        </TestLayout>\r\n        {(page !== len && isClicked) && <TestLayout next={1} isClicked={isClicked}>\r\n\r\n            <TestImage src={testDataList[page].imgSrc}/>\r\n            <TestQuestion>{testDataList[page].questionTxt} </TestQuestion>\r\n            {testDataList[page].answerTxtList.map((value, index)=>\r\n                <SelectBtn onClick={()=>onNextHandler(value.result)} key={index}>{value.answerTxt}</SelectBtn>\r\n            )}\r\n        </TestLayout>}\r\n    </Whole>);\r\n}\r\nexport default TestView;","import { TestLayout } from 'destroyTest/component/layout';\r\nimport TestProgress from 'destroyTest/component/TestProgress';\r\nimport React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { MOVE_TEST_PAGE } from 'redux/action/types';\r\nimport styled from 'styled-components';\r\n\r\nconst Whole = styled.section`\r\n    margin-top: 50px;\r\n    /* border: 1px solid; */\r\n`;\r\n\r\nconst Title1 = styled.h1`\r\n    margin-bottom: 15px;\r\n`;\r\n\r\nconst Title2 = styled.h2`\r\n    margin-bottom: 45px;\r\n`;\r\n\r\nconst StartBtn = styled.button`\r\n    width: 240px;\r\n    height: 60px;\r\n    background: #FF7070;\r\n    border-radius: 10px;\r\n\r\n    font-size: 1.6rem;\r\n    font-weight: 700;\r\n\r\n    &:hover{\r\n        background: white;\r\n    }\r\n`;\r\n\r\nfunction DestroyMain(){\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    return (\r\n    <Whole>\r\n        <TestLayout>\r\n            \r\n            <Title1>멸망한 세계에서</Title1>\r\n            <Title2>알아보는 성격 테스트</Title2>\r\n\r\n            <StartBtn><Link to=\"/test\"> S T A R T </Link></StartBtn>\r\n        </TestLayout>\r\n    </Whole>);\r\n}\r\nexport default DestroyMain;","import { testDataList } from 'destroyTest/component/data';\nimport TestResult from 'destroyTest/TestResult';\nimport TestView from 'destroyTest/TestView';\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport { Route } from 'react-router';\nimport styled from 'styled-components';\nimport DestroyMain from './destroyTest/DestroyMain';\n\n\nconst Whole = styled.div`\n  height: 100vh;\n  background: #282525;\n  padding-top : 60px;\n`;\n\nfunction App() {\n\n  return (\n      <Whole>\n        <Route exact path='/' component={DestroyMain} />\n        <Route path='/test' component={TestView} />\n        <Route path='/result' component={TestResult} />\n      </Whole>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","\r\nimport { \r\n    MOVE_TEST_PAGE,\r\n    RESULT_TXT_ADD,\r\n    INIT_TEST\r\n} from '../action/types';\r\n\r\n\r\n\r\nconst initDestroyData = {\r\n    page: 1,\r\n    result: [],\r\n\r\n}\r\n\r\n\r\nexport default function(state=initDestroyData, action:any) {\r\n    \r\n    switch(action.type){\r\n        case INIT_TEST:\r\n            return {...state, page: 1, result: []};\r\n        \r\n        case MOVE_TEST_PAGE:\r\n            console.log(state);\r\n            return {...state, page: state.page+1};\r\n\r\n        case RESULT_TXT_ADD:\r\n\r\n            return {...state, result: [...state.result, action.payload]}\r\n        default:\r\n            return state;\r\n    }\r\n\r\n};","import { combineReducers } from 'redux';\r\nimport destroy from './destroyReducer';\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n    destroy,\r\n})\r\n\r\nexport default rootReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from \"react-redux\";\nimport {createStore, applyMiddleware} from 'redux';\nimport Reducer from 'redux/reducer';\nimport { BrowserRouter } from 'react-router-dom';\n\n//const store = createStore(Reducer, applyMiddleware(thunk));\nconst store = createStore(Reducer);\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}